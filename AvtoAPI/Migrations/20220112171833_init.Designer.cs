// <auto-generated />
using AvtoAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvtoAPI.Migrations
{
    [DbContext(typeof(AvtoContext))]
    [Migration("20220112171833_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvtoAPI.Entities.Avto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("body_type_id");

                    b.Property<int>("BrandModelId")
                        .HasColumnType("int")
                        .HasColumnName("brand_model_id");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    b.Property<string>("NumberAvto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number_avto");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasColumnName("power");

                    b.Property<int>("RudderId")
                        .HasColumnType("int")
                        .HasColumnName("rudder_id");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vin");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("BrandModelId");

                    b.HasIndex("ColorId");

                    b.HasIndex("RudderId");

                    b.ToTable("avto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyTypeId = 1,
                            BrandModelId = 1,
                            ColorId = 1,
                            NumberAvto = "1",
                            PersonId = 1,
                            Power = 111,
                            RudderId = 1,
                            Vin = "1111111111",
                            Year = 2001
                        },
                        new
                        {
                            Id = 2,
                            BodyTypeId = 2,
                            BrandModelId = 2,
                            ColorId = 2,
                            NumberAvto = "2",
                            PersonId = 1,
                            Power = 222,
                            RudderId = 2,
                            Vin = "2211111111",
                            Year = 2002
                        },
                        new
                        {
                            Id = 3,
                            BodyTypeId = 3,
                            BrandModelId = 3,
                            ColorId = 3,
                            NumberAvto = "3",
                            PersonId = 2,
                            Power = 333,
                            RudderId = 1,
                            Vin = "3311111111",
                            Year = 2003
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("body_type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Седан"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Хэтчбэк"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Купе"
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            Name = "KIA"
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("brand_model");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "c63"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            Name = "m5"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            Name = "k5"
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.CarOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvtoId")
                        .HasColumnType("int")
                        .HasColumnName("avto_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.HasKey("Id");

                    b.HasIndex("AvtoId");

                    b.ToTable("car_owner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvtoId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvtoId = 2,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            AvtoId = 3,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.ColorAvto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Синий"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Красный"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Белый"
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.Rudder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("rudder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Левый"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Правый"
                        });
                });

            modelBuilder.Entity("AvtoAPI.Entities.Avto", b =>
                {
                    b.HasOne("AvtoAPI.Entities.BodyType", "BodyType")
                        .WithMany()
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvtoAPI.Entities.BrandModel", "BrandModel")
                        .WithMany()
                        .HasForeignKey("BrandModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvtoAPI.Entities.ColorAvto", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvtoAPI.Entities.Rudder", "Rudder")
                        .WithMany()
                        .HasForeignKey("RudderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("BrandModel");

                    b.Navigation("Color");

                    b.Navigation("Rudder");
                });

            modelBuilder.Entity("AvtoAPI.Entities.BrandModel", b =>
                {
                    b.HasOne("AvtoAPI.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("AvtoAPI.Entities.CarOwner", b =>
                {
                    b.HasOne("AvtoAPI.Entities.Avto", "Avto")
                        .WithMany()
                        .HasForeignKey("AvtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avto");
                });
#pragma warning restore 612, 618
        }
    }
}
