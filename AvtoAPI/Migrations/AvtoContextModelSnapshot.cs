// <auto-generated />
using AvtoAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvtoAPI.Migrations
{
    [DbContext(typeof(AvtoContext))]
    partial class AvtoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvtoAPI.Entities.Avto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("body_type_id");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasColumnName("power");

                    b.Property<int>("RudderId")
                        .HasColumnType("int")
                        .HasColumnName("rudder_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("RudderId");

                    b.ToTable("avto");
                });

            modelBuilder.Entity("AvtoAPI.Entities.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("body_type");
                });

            modelBuilder.Entity("AvtoAPI.Entities.CarOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvtoId")
                        .HasColumnType("int")
                        .HasColumnName("avto_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.HasKey("Id");

                    b.HasIndex("AvtoId");

                    b.ToTable("car_owner");
                });

            modelBuilder.Entity("AvtoAPI.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvtoId")
                        .HasColumnType("int")
                        .HasColumnName("AvtoId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("NumberLicense")
                        .HasColumnType("int")
                        .HasColumnName("numberlicense");

                    b.Property<int>("NumberPasport")
                        .HasColumnType("int")
                        .HasColumnName("numberpasport");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("AvtoId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("AvtoAPI.Entities.Rudder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("rudder");
                });

            modelBuilder.Entity("AvtoAPI.Entities.Avto", b =>
                {
                    b.HasOne("AvtoAPI.Entities.BodyType", "BodyType")
                        .WithMany()
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvtoAPI.Entities.Rudder", "Rudder")
                        .WithMany()
                        .HasForeignKey("RudderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("Rudder");
                });

            modelBuilder.Entity("AvtoAPI.Entities.CarOwner", b =>
                {
                    b.HasOne("AvtoAPI.Entities.Avto", "Avto")
                        .WithMany()
                        .HasForeignKey("AvtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avto");
                });

            modelBuilder.Entity("AvtoAPI.Entities.Person", b =>
                {
                    b.HasOne("AvtoAPI.Entities.Avto", "Avto")
                        .WithMany()
                        .HasForeignKey("AvtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avto");
                });
#pragma warning restore 612, 618
        }
    }
}
