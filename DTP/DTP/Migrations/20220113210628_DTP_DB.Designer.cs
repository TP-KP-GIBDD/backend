// <auto-generated />
using System;
using DTP.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DTP.Migrations
{
    [DbContext(typeof(ProtocolContext))]
    [Migration("20220113210628_DTP_DB")]
    partial class DTP_DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DTP.Entities.Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitube")
                        .HasColumnType("float")
                        .HasColumnName("Latitude");

                    b.Property<double>("Longitube")
                        .HasColumnType("float")
                        .HasColumnName("Longitube");

                    b.HasKey("Id");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("DTP.Entities.Participants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountId");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("DTP.Entities.PlaceViolation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordinatesId")
                        .HasColumnType("int")
                        .HasColumnName("CoordinatesId");

                    b.Property<string>("MethodTrafficRegulation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MethodTrafficRegulation");

                    b.Property<string>("RoadMarkup")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoadMarkup");

                    b.Property<string>("RoadSigns")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoadSigns");

                    b.Property<string>("TypeLighting")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TypeLighting");

                    b.HasKey("Id");

                    b.HasIndex("CoordinatesId");

                    b.ToTable("PlaceViolation");
                });

            modelBuilder.Entity("DTP.Entities.Protocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<int>("AvtoId")
                        .HasColumnType("int")
                        .HasColumnName("avtoId");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("damage");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int")
                        .HasColumnName("InspectorId");

                    b.Property<int>("ParticipantsId")
                        .HasColumnType("int")
                        .HasColumnName("participantsId");

                    b.Property<int>("PlaceViolationId")
                        .HasColumnType("int")
                        .HasColumnName("placeViolationId");

                    b.Property<int>("TypeViolationId")
                        .HasColumnType("int")
                        .HasColumnName("typeViolationId");

                    b.Property<string>("Violation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("violation");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateTime");

                    b.Property<int>("identifier")
                        .HasColumnType("int")
                        .HasColumnName("identifier");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantsId");

                    b.HasIndex("PlaceViolationId");

                    b.HasIndex("TypeViolationId");

                    b.ToTable("Protocols");
                });

            modelBuilder.Entity("DTP.Entities.TypeViolation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("TypeViolations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "столкновение транспортных средств"
                        },
                        new
                        {
                            Id = 2,
                            Name = "наезд на припятствие"
                        },
                        new
                        {
                            Id = 3,
                            Name = "опрокидывание/съезд в кювет"
                        },
                        new
                        {
                            Id = 4,
                            Name = "наезд на пешехода"
                        },
                        new
                        {
                            Id = 5,
                            Name = "наезд на животное"
                        },
                        new
                        {
                            Id = 6,
                            Name = "другое"
                        });
                });

            modelBuilder.Entity("DTP.Entities.PlaceViolation", b =>
                {
                    b.HasOne("DTP.Entities.Coordinates", "Coordinates")
                        .WithMany()
                        .HasForeignKey("CoordinatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinates");
                });

            modelBuilder.Entity("DTP.Entities.Protocol", b =>
                {
                    b.HasOne("DTP.Entities.Participants", "Participants")
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DTP.Entities.PlaceViolation", "PlaceViolation")
                        .WithMany()
                        .HasForeignKey("PlaceViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DTP.Entities.TypeViolation", "TypeViolation")
                        .WithMany()
                        .HasForeignKey("TypeViolationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participants");

                    b.Navigation("PlaceViolation");

                    b.Navigation("TypeViolation");
                });
#pragma warning restore 612, 618
        }
    }
}
